name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  api:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [ '8.3', '8.4' ]
        db: [ sqlite ]
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, intl, zip, bcmath, pcntl, pdo_mysql, pdo_pgsql, redis
          tools: composer:v2
      - name: Cache composer
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('api/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install dependencies
        working-directory: api
        run: |
          composer install --prefer-dist --no-interaction --no-progress
          cp -n .env.example .env || true
          php artisan key:generate
      - name: PHPStan
        working-directory: api
        run: vendor/bin/phpstan analyse --no-progress --level=8 || true
      - name: Migrate & seed
        working-directory: api
        run: |
          php artisan migrate --force
          php artisan db:seed --force || true
      - name: Tests (Pest)
        working-directory: api
        run: vendor/bin/pest --colors=always

  web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: web/package-lock.json
      - name: Install
        working-directory: web
        run: npm ci
      - name: Generate API types
        working-directory: web
        run: npm run generate:types
      - name: Lint
        working-directory: web
        run: npm run lint -- --max-warnings=0
      - name: Type-check
        working-directory: web
        run: npm run type-check
      - name: Unit tests
        working-directory: web
        run: npm run test -- --run
      - name: Build
        working-directory: web
        run: npm run build
      - name: Upload web build
        uses: actions/upload-artifact@v4
        with:
          name: web-dist
          path: web/dist

  e2e:
    runs-on: ubuntu-latest
    needs: [ api, web ]
    services:
      redis:
        image: redis:7-alpine
        ports: [ '6379:6379' ]
      docker:
        image: docker:25.0.3-dind
    steps:
      - uses: actions/checkout@v4
      - name: Compose up
        run: docker compose up -d --build
      - name: Wait for services
        run: |
          for i in {1..60}; do curl -sf http://localhost:8080/health && exit 0 || sleep 2; done; exit 1
      - name: Run Playwright
        run: echo "TODO: add e2e" && exit 0


